CONTEXT EmploymentPrincipleFormalization IN ENGLISH
PURPOSE CONTEXT EmploymentPrincipleFormalization
{+ This context formalizes the principles of `Employment.adl`, such that you can switch them `on` and `off`.+}

CONCEPT Criterion "a (human readable) criterion that, if accepted by our organization, must be complied with"
CONCEPT Principle "a text that identifies a particular formalization (rule) of a Criterion"

RELATION pCrit[Principle*Criterion] [INJ,SUR,UNI,TOT] MEANING "Complying with {{SRC}} means that {{TGT}} is always satisfied."
RELATION pAccepted[Principle] [PROP] MEANING "Principle {{SRC}} has been accepted and therefore must be complied with."

POPULATION pCrit[Principle*Criterion] CONTAINS
[ ("B1", "The board must oversee all departments")
, ("B2", "Only department managers report to board members")
, ("B3", "Only the managers of departments that are overseen by a particular board member may, and must report to that board member.")
, ("D1", "Departments must have precisely one manager")
, ("D2", "Departments must list the functions for which they have positions")
, ("D3", "Departments must have employees")
, ("D4", "Everyone that works for a department must be an employee (have a contract)")
, ("E1", "All employees must have one function")
, ("E2", "An employee that has been assigned a function must have the associated qualifications")
, ("E3", "All employees must be assigned to a department for which their function is relevant")
, ("R1", "People must not report to themselves")
, ("R2", "All employees that are not the department manager must report to their department manager")
, ("R3", "Managers must report to the board member that oversees his department")
]

--[Fixes: Instructions for automatically fixing violations of Priniples]

CONCEPT Fix "a working instruction that exists for the purpose of fixing violations of a Principle."
RELATION fixPrinciple[Fix*Principle] [UNI,TOT] MEANING "{{SRC}} exists for the purpose of fixing violations of {{TGT}}."
RELATION fixInstr[Fix*Text] [UNI,TOT] MEANING "Violations of the principle associated with {{SRC}} is done by doing what {{TGT}} states."

RELATION fAccepted[Fix] [PROP] MEANING "Fix {{SRC}} has been accepted, and therefore will be used to fix violations of the associated Principle."
ENFORCE fAccepted :< fixPrinciple;pAccepted;fixPrinciple~ -- MAINTAIN: fAccepted |- fixPrinciple;pAccepted;fixPrinciple~

--[Principles and Fixes: Board and organization structure]

RULE "B1: The board must oversee all departments":
   V;pAccepted;"B1";V /\ I[Department] |- oversees~;boardMember;V

-----
RULE "B2: Only department managers report to board members":
   V;pAccepted;"B2";V /\ reportsTo;boardMember |- deptManager~;V

POPULATION fixPrinciple CONTAINS [ ("B2-fix","B2") ]
POPULATION fixInstr CONTAINS [ ("B2-fix","Remove the reporting relation between non-managers and board members") ]
ROLE ExecEngine MAINTAINS "B2-fix"   RULE "B2-fix": 
   V;fAccepted;"B2-fix";V /\ reportsTo;boardMember |- deptManager~;V
   VIOLATION (TXT "{EX} DelPair;Person;", SRC I, TXT ";Person;", SRC reportsTo;boardMember)

-----
RULE "B3: Only the managers of departments that are overseen by a particular board member may, and must report to that board member.":
   V;pAccepted;"B3";V /\ reportsTo;boardMember = V;pAccepted;"B3";V /\ (oversees;deptManager)~

POPULATION fixPrinciple CONTAINS [ ("B3-a","B3") ]
POPULATION fixInstr CONTAINS [ ("B3-a","If a person manages a department that is overseen by a boardmember, (s)he must (be made to) report to that boardmember.") ]
ROLE ExecEngine MAINTAINS "B3-a"   RULE "B3-a":
   V;fAccepted;"B3-a";V /\ deptManager~;oversees~;boardMember~ |- reportsTo
   VIOLATION (TXT "{EX} InsPair;reportsTo;Person;", SRC I, TXT ";Person;", TGT I)

POPULATION fixPrinciple CONTAINS [ ("B3-b","B3") ]
POPULATION fixInstr CONTAINS [ ("B3-b","If a person that reports to a boardmember does not manage a department that the boardmember oversees, the reporting relationship must be terminated.") ]
ROLE ExecEngine MAINTAINS "B3-b"   RULE "B3-b":
   V;fAccepted;"B3-b";V /\ reportsTo;boardMember |- reportsTo
   VIOLATION (TXT "{EX} InsPair;reportsTo;Person;", SRC I, TXT ";Person;", TGT I)

--[Principles and Fixes: Departments]

RULE "D1: Departments must have precisely one manager":
   V;pAccepted;"D1";V /\ I[Department] |- deptManager;deptManager~

RULE "D2: Departments must list the functions for which they have positions":
   V;pAccepted;"D2";V /\ deptFunction |- deptFunction;-I 
MEANING "Each department must have at least two different functions specified. It is assumed that one of them is `Manager`."

RULE "D3: Departments must have employees":
   V;pAccepted;"D3";V /\ I[Department] |- emplDepartment~;emplDepartment

RULE "D4: Everyone that works for a department must be an employee (have a contract)":
   V;pAccepted;"D4";V /\ emplDepartment |- employee;emplDepartment

--[Principles and Fixes: Employees]

RULE "E1: All employees must have one function":
   V;pAccepted;"E1";V /\ employee |- emplFunction;emplFunction~ /\ -(emplFunction;-I;emplFunction~)

RULE "E2 An employee that has been assigned a function must have the associated qualifications":
   V;pAccepted;"E2";V /\ emplFunction |- isQualifiedFor

RULE "E3: All employees must be assigned to a department for which their function is relevant":
   V;pAccepted;"E3";V /\ emplDepartment~;emplFunction |- deptFunction

--[Principles and Fixes: Reporting]

RULE "R1: People must not report to themselves":
   V;pAccepted;"R1";V /\ reportsTo |- -I[Person]

-- RULE "R2: Employees must report to their manager":
--    emplDepartment;deptManager |- reportsTo

RULE "R2: All employees that are not the department manager must report to their department manager":
   V;pAccepted;"R2";V /\ (emplDepartment-deptManager~);deptManager |- reportsTo

-- RULE "R3: Managers must report to a member of the board":
--    deptManager~ |- reportsTo;boardMember;V

RULE "R3: Managers must report to the board member that oversees his department":
   V;pAccepted;"R3";V /\ (oversees;deptManager)~ |- reportsTo

-----------------------------------------
--[DEFINING INTERFACES FOR THE PROTOTYPE]
-----------------------------------------

INTERFACE "Principle Acceptance": V[ONE*Principle] cRud
BOX<TABLE>
   [ "Accept?": pAccepted       cRUd
   , "ID": I[Principle]             cRud
   , "Criterion": pCrit  cRud
   ]

INTERFACE "Fixes": I[Principle] cRud
   BOX <RAW form>
   [ "Principle": I[Principle] cRud 
      BOX <RAW table>
      [ "Accepted?": pAccepted cRUd
      , "ID": I[Principle]     cRud
      , "Criterion": pCrit     cRud
      ]
   , "Fix(es)": fixPrinciple~  cRud 
      BOX <RAW form>
      [ "Accepted?": fAccepted cRUd
      , "ID": I[Fix]           cRud
      , "Criterion": fixInstr  cRud

      ]
   ]

INTERFACE "Principles and Fixes": V[ONE*Principle] cRud
   BOX<TABLE>
   [ "Principle": I[Principle] cRud 
      BOX <RAW table>
      [ "Accepted?": pAccepted cRUd
      , "ID": I[Principle]     cRud
      , "Criterion": pCrit     cRud
      ]
   , "Fix(es)": fixPrinciple~  cRud 
      BOX <RAW form>
      [ "Accepted?": fAccepted cRUd
      , "ID": I[Fix]           cRud
      , "Criterion": fixInstr  cRud

      ]
   ]

ENDCONTEXT