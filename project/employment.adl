CONTEXT Employment IN ENGLISH
PURPOSE CONTEXT Employment
{+ The context of this exercise is `our organization`.
 Our organization has departments, e.g. `Finance`, `Operations` and `Support`,
 that have their own tasks. Our organization also has a board, the members of 
 which oversee its various departments. Employees have a function within the 
 department to which they are assigned, and for which they are qualified. 
 Functions indicate the kinds of work that employees are primarily expected to do. 
 Employees report to their managers, whereas managers report to the member of the board
 that oversees their department.

The above text is provided to participants of the CMMC as an exercise.
The purpose of this exercise is to let the participants experience:
- that properly defining concepts and relations isn't as trivial as it seems;
- that a system that has no principles cannot work as you would want it to,
  so principles must be defined and applied.
- that the proper specification of a principle requires that the concepts and
  relations on which it builds, must also be properly specified - if not, you
  run the risk that the meaning/effects of the principle are not clear (enough);
- what the acceptance of a (properly specified) principle has on the functioning
  of the system, and conversly: that in order to have a system that functions
  as you would like it to, you need to properly specify the associated principles
- that accepting a principle means you also need to decide how it is to be 
  enforced - as an invariant or process rule.
- that process rules must be associated with a working instruction 
  that specifies how violations are to be terminated
- that a working instruction must be assigned to a Role/class of actors
  that are capable of executing that working instruction.

-- 1: Concepts and Relations
1a. Participants must properly define concepts and relations from the above text.
1b. The results are discussed, as well as the experiences of the participants.
1c. The participants are provided with the Definintions for Concepts and Relations
    as provided below. The modeling decisions can be questioned/discussed.
1d. The participants are shown this demo, limited to the part that does not
    contain enforceable rules.

-- 2: Principles (Rules, Constraints)
2a. Participants must use the provided definitions of Concepts and Relations
    to express proposals for Principles:
    - start easy, with multiplicity constraints
    - continue with non-multiplicity constraints
2b. The results are discussed, as well as the experiences of the participants.
2c. The participants are provided with the set of Principles below, i.e.,
    a set of RULEs that phrase the principles, and the motivation (PURPOSE)
    for having them. The modeling decisions can be questioned/discussed.
2d. The participants are shown this demo, where they now can choose to accept
    participants as they are provided below. That will provide them with the
    experience that principles/rules/constraints are what make applicaitons 
    tick. They should then conclude that in order to properly define principles,
    they need properly defined relations, and for that they need properly 
    defined concepts.

-- 3: Enforcing Principles (Fixing Violations)
3a. Participants must decide how Principles are to be enforced, i.e., 
    whether they are invariants or process rules. In the latter case, they
    must devise a (short!) working instruction for fixing violations.
3b. The results are discussed, as well as the experiences of the participants.
3c. The participants are provided the set of Fixes that we have defined
    for the various Principles. The modeling decisions can be questioned/discussed. 
3d. The participants are shown this demo, where they now can also choose
    which fixes to apply for violations of various principles. When a principle
    for which a fix was selected no longer applies, the fix will automatically
    also be de-activated.    
+}

--[Definitions for Concepts]

CONCEPT Person     "a human being"
CONCEPT Department "a functional unit within an organization that is being managed."
CONCEPT Function   "a job position or title that employees can hold."

--[Definitions for Relations]

RELATION boardMember[Person] [PROP]        MEANING "{{SRC}} is a member of the board of our organization"
RELATION oversees[Person*Department]       MEANING "{{SRC}} oversees department {{TGT}}"

RELATION deptManager[Department*Person]    MEANING "{{SRC}} has {{TGT}} as its manager"
RELATION deptFunction[Department*Function] MEANING "{{SRC}} has job positions for employees that can fulfill {{TGT}}"

RELATION isQualifiedFor[Person*Function]   MEANING "{{SRC}} has been qualified to fulfill funtion {{TGT}}"
RELATION employee[Person] [PROP]           MEANING "{{SRC}} has a working relationship/contract with our organization"
RELATION emplDepartment[Person*Department] MEANING "{{SRC}} works in department {{TGT}} of our organization"
RELATION emplFunction[Person*Function]     MEANING "{{SRC}} has been assigned the function {{TGT}}"
RELATION reportsTo[Person*Person]          MEANING "{{SRC}} reports to {{TGT}}"

--[Principles: Board and organization structure]

PURPOSE RULE "B1: The board must oversee all departments"
{+In order to be in control, every deparment must be overseen by a member of the board - no exceptions.+}

PURPOSE RULE "B2: Only department managers report to board members"
{+In order to ensure the workload of board members is limited, only department managers may report to the board.+}

PURPOSE RULE "B3: Only the managers of departments that are overseen by a particular board member may, and must report to that board member."
{+Proper reporting to the board means that the board members that oversee a department will be reported to by its manager.
  Also, each such manager must report to the board member that oversees its department.+}

--[Principles: Departments]

PURPOSE RULE "D1: Departments must have precisely one manager"
{+Departments must be led/managed. The responsibility for doing so must be assigned to a single person,
to ensure that it is always unambiguously clear who it is that bears that responsibility.+}

PURPOSE RULE "D2: Departments must list the functions for which they have positions"
{+Hiring people that can do the work in a department (a functional unit) becomes easier if sets of
  capabilities are specified (Functions) that the deparment needs to get its work done. 
  Therefore, departments should list the functions for which they have job positions.+}

PURPOSE RULE "D3: Departments must have employees"
{+A department that doesn't have employees cannot do work.+}

PURPOSE RULE "D4: Everyone that works for a department must be an employee (have a contract)"
{+In order to make sure that people working in one of our organization's departments are well-behaved,
  they must be employees, which implies they have signed a contract that provides appropriate guarantees for that.+}

--[Principles: Employees]

PURPOSE RULE "E1: All employees must have one function"
{+In order to not overload employees, it has been decided that they can have at most one function.+}

PURPOSE RULE "E2 An employee that has been assigned a function must have the associated qualifications"
{+People should only be employed to fulfill a function if they can do the associated work.
  Therefore, it must have been established that they can do the work if they are assigned a function.+}

PURPOSE RULE "E3: All employees must be assigned to a department for which their function is relevant"
{+In order to guarantee that people end up in a department that can use the capabilities 
  for which they are qualified, people should only be assigned to deparments that can use those.+}

--[Principles: Reporting]

PURPOSE RULE "R1: People must not report to themselves"
{+Butchers should not judge their own meat, and similarly, people must not report to themselves.+}

-- PURPOSE RULE "R2: Employees must report to their manager"
-- PURPOSE RULE "R2: Employees must report to their manager"
-- {+In order not to overload people with red tape, people must report to at most one person.+}

PURPOSE RULE "R2: All employees that are not the department manager must report to their department manager"
{+The easiest reporting line for employees is to report to their department manager (provided they are not the manager themselves).+}

-- PURPOSE RULE "R3: Managers must report to a member of the board"
-- PURPOSE RULE "R3: Managers must report to a member of the board"
-- {+To ensure that the board can oversee all departments, each manager must report to some member of the board.+}

PURPOSE RULE "R3: Managers must report to the board member that oversees his department"
{+Since the board has decided to assign departments to its members to oversee, it makes sense 
  to have the managers of these departments report to the board member that oversees his/her department.+}

------------------------------------------------
--[FORMALIZING THE PRINCIPLES (USING AMPERSAND)]
------------------------------------------------
--#IF formalize_principles

--[Principles: Board and organization structure]

RULE "B1: The board must oversee all departments":
RULE "B1: The board must oversee all departments":
   I[Department] |- oversees~;boardMember;V

RULE "B2: Only department managers report to board members":
RULE "B2: Only department managers report to board members":
   reportsTo;boardMember |- deptManager~;V

RULE "B3: Only the managers of departments that are overseen by a particular board member may, and must report to that board member.":
RULE "B3: Only the managers of departments that are overseen by a particular board member may, and must report to that board member.":
   reportsTo;boardMember = (oversees;deptManager)~

--[Principles: Departments]

RULE "D1: Departments must have precisely one manager":
RULE "D1: Departments must have precisely one manager":
   I[Department] |- deptManager;deptManager~

RULE "D2: Departments must list the functions for which they have positions":
RULE "D2: Departments must list the functions for which they have positions":
   deptFunction |- deptFunction;-I 
MEANING "Each department must have at least two different functions specified. It is assumed that one of them is `Manager`."

RULE "D3: Departments must have employees":
RULE "D3: Departments must have employees":
   I[Department] |- emplDepartment~;emplDepartment

RULE "D4: Everyone that works for a department must be an employee (have a contract)":
RULE "D4: Everyone that works for a department must be an employee (have a contract)":
   emplDepartment |- employee;emplDepartment

--[Principles: Employees]

RULE "E1: All employees must have one function":
RULE "E1: All employees must have one function":
   employee |- emplFunction;emplFunction~ /\ -(emplFunction;-I;emplFunction~)

RULE "E2 An employee that has been assigned a function must have the associated qualifications":
RULE "E2 An employee that has been assigned a function must have the associated qualifications":
   emplFunction |- isQualifiedFor

RULE "E3: All employees must be assigned to a department for which their function is relevant":
RULE "E3: All employees must be assigned to a department for which their function is relevant":
   emplDepartment~;emplFunction |- deptFunction

--[Principles: Reporting]

RULE "R1: People must not report to themselves":
RULE "R1: People must not report to themselves":
   reportsTo |- -I[Person]

-- RULE "R2: Employees must report to their manager":
-- RULE "R2: Employees must report to their manager":
--    emplDepartment;deptManager |- reportsTo

RULE "R2: All employees that are not the department manager must report to their department manager":
RULE "R2: All employees that are not the department manager must report to their department manager":
   (emplDepartment-deptManager~);deptManager |- reportsTo

-- RULE "R3: Managers must report to a member of the board":
-- RULE "R3: Managers must report to a member of the board":
--    deptManager~ |- reportsTo;boardMember;V

RULE "R3: Managers must report to the board member that oversees his department":
RULE "R3: Managers must report to the board member that oversees his department":
   (oversees;deptManager)~ |- reportsTo

--#ENDIF

-----------------------------------------
--[DEFINING INTERFACES FOR THE PROTOTYPE]
-----------------------------------------

INTERFACE "Board":V[ONE*Person];boardMember
BOX <TABLE>
   [ "Board member" : I[Person]
   , "Oversees" : oversees
   , "Rep. Mgrs." : reportsTo~
   , "Qualified for": isQualifiedFor
   ]

INTERFACE "Departments":V[ONE*Department] 
BOX <TABLE>
   [ "Department" : I[Department]
   , "Manager" : deptManager
   , "Employees" : emplDepartment~
   , "Functions" : deptFunction
   ]

INTERFACE "Functions":V[ONE*Function] 
BOX <TABLE>
   [ "Function" : I[Function]
   , "Departments" : deptFunction~
   , "Employees" : emplFunction~
   ]

INTERFACE "Employees":V[ONE*Person];employee 
BOX <TABLE>
   [ "Name" : I[Person]
   , "Department" : emplDepartment
   , "Function" : emplFunction
   , "Reports to": reportsTo
   , "Qualified for": isQualifiedFor
   ]

INTERFACE "Other people":V[ONE*Person] 
BOX <TABLE>
   [ "Name" : I[Person]
   , "Board member?" : boardMember
   , "Function" : emplFunction
   , "Reports to": reportsTo 
   , "Qualified for": isQualifiedFor
   ]

INTERFACE "My Organization": "_SESSION";V[SESSION*ONE] cRud
BOX <TABS>
   [ "The Board":            I INTERFACE "Board"
   , "Departments":          I INTERFACE "Departments"
   , "Functions":            I INTERFACE "Functions"
   , "Employees":            I INTERFACE "Employees"
   , "Other people":         I INTERFACE "Other people"
--#IF demo
   , "Principle Acceptance": I INTERFACE "Principle Acceptance"
   , "Principles and Fixes": I INTERFACE "Principles and Fixes"
--#ENDIF
   ]

------------------------------------------------
--[SPECIFYING A TEST POPULATION]
------------------------------------------------

--[The Board]

POPULATION boardMember[Person*Person] CONTAINS
   [ ("Boris", "Boris"), ("Birgit", "Birgit"), ("Bram", "Bram") ]

POPULATION oversees[Person*Department] CONTAINS
   [ ("Boris", "Finance")
   , ("Birgit", "Operations")
   , ("Bram", "Support") 
   ]

--[Departments]

POPULATION deptManager[Department*Person] CONTAINS
   [ ("Finance","Alice")
   , ("Operations","Darryl")
   , ("Support","George")
   ]

POPULATION deptFunction[Department*Function] CONTAINS
   [ ("Finance","Manager"), ("Finance","Controller"), ("Finance","Administrator")
   , ("Operations","Manager"), ("Operations","Operator")
   , ("Support","Manager"), ("Support","Support engineer")
   ]

--[Employees]

POPULATION employee[Person*Person] CONTAINS
   [ ("Alice","Alice")
   , ("Bob","Bob")
   , ("Charlie","Charlie")
   , ("Darryl","Darryl") 
   , ("Evert","Evert")
   , ("Flora","Flora")
   , ("George","George")
   , ("Harry","Harry")
   ]

POPULATION emplDepartment[Person*Department] CONTAINS
   [ ("Alice","Finance")
   , ("Bob","Finance")
   , ("Charlie","Finance")
   , ("Darryl","Operations")
   , ("Evert","Operations")
   , ("Flora","Operations")
   , ("George","Support")
   , ("Harry","Support")
   ]

POPULATION isQualifiedFor[Person*Function] CONTAINS
   [ ("Alice","Manager"), ("Alice","Controller"), ("Alice","Administrator")
   , ("Bob","Controller"), ("Bob","Administrator")
   , ("Charlie","Administrator")
   , ("Darryl","Manager"), ("Darryl","Operator")
   , ("Evert","Operator")
   , ("Flora", "Operator")
   , ("George","Manager"), ("George","Controller")
   , ("Harry","Support engineer"), ("Harry","Operator")
   , ("Irene","Manager"), ("Irene","Controller")
   , ("John","Operator"), ("John","Support Engineer")
   , ("Karel","CISO"), ("Karel","Security Officer")
   ]

POPULATION emplFunction[Person*Function] CONTAINS
   [ ("Alice","Manager")
   , ("Bob","Controller")
   , ("Charlie","Administrator")
   , ("Darryl","Manager")
   , ("Evert","Operator")
   , ("Flora", "Operator")
   , ("George","Manager")
   , ("Harry","Support engineer")
   ]

POPULATION reportsTo[Person*Person] CONTAINS
   [ ("Alice","Boris")
   , ("Bob","Alice")
   , ("Charlie","Alice")
   , ("Darryl","Birgit")
   , ("Evert","Darryl")
   , ("Flora", "Darryl")
   , ("George","Bram")
   , ("Harry","George")
   ]

ENDCONTEXT